---
// Definimos las propiedades que acepta el componente
interface Props {
  title: string;
  subtitle: string;
  primaryButton: string;
  primaryLink: string;
  secondaryButton?: string;
  secondaryLink?: string;
}

// Extraemos las propiedades
const { 
  title, 
  subtitle, 
  primaryButton, 
  primaryLink, 
  secondaryButton, 
  secondaryLink 
} = Astro.props;
---

<section class="hero">
  <div class="container">
    <div class="hero-content fade-in">
      <h1>{title}</h1>
      <p class="mb-3">{subtitle}</p>
      <!-- <div class="hero-buttons">
        <a href={primaryLink} class="btn">{primaryButton}</a>
        {secondaryButton && secondaryLink && (
          <a href={secondaryLink} class="btn btn-outline">{secondaryButton}</a>
        )}
      </div> -->
    </div>
  </div>
</section>

<style>
  .hero {
    min-height: 100vh;
    display: flex;
    align-items: center;
    padding-top: 5rem;
    background: linear-gradient(135deg, rgba(245, 245, 247, 0.8) 0%, rgba(255, 255, 255, 0.9) 100%);
    position: relative;
    overflow: hidden;
  }

  .hero-content {
    position: relative;
    z-index: 2;
    max-width: 600px;
  }

  .hero-buttons {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero-buttons {
      flex-direction: column;
    }
    
    .hero-content h1 {
      font-size: 2.5rem;
    }
  }
</style>