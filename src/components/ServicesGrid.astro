<!-- ---
// components/ServicesGrid.astro
import type { ReactNode } from 'react';
import { useState } from 'react';

interface Service {
  title: string;
  description: string;
  icon: ReactNode;
  link: string;
}

const services: Service[] = [
  {
    title: "Desarrollo Web a Medida",
    description: "Convertimos tus ideas en experiencias digitales. Creamos aplicaciones web modernas, r√°pidas y escalables, enfocadas en la usabilidad y la conexi√≥n con tus usuarios.",
    icon: "üíª",
    link: "/servicios/desarrollo-web"
  },
  {
    title: "Soporte y Gesti√≥n de Sistemas",
    description: "Garantizamos la continuidad de tu operaci√≥n. Nos anticipamos a los problemas y optimizamos tus sistemas con un mantenimiento proactivo y soporte experto para que siempre est√©n eficientes y seguros.",
    icon: "üîß",
    link: "/servicios/mantenimiento-sistemas"
  },
  {
    title: "Arquitectura de Infraestructura",
    description: "Dise√±amos la base tecnol√≥gica para tu crecimiento. Construimos y optimizamos infraestructuras eficientes y seguras que te preparan para escalar y competir en el futuro.",
    icon: "üèóÔ∏è",
    link: "/servicios/infraestructura-tecnologica"
  },
  {
    title: "Asesor√≠a en Transformaci√≥n Digital",
    description: "Te guiamos en la optimizaci√≥n de procesos y la adopci√≥n de tecnolog√≠as clave. Te ofrecemos una hoja de ruta clara para que tu negocio sea m√°s eficiente, innovador y competitivo.",
    icon: "üìä",
    link: "/servicios/consultoria-it"
  },
  {
    title: "Capacitaci√≥n y Cursos IT",
    description: "Invertimos en tu equipo para potenciar tu negocio. Ofrecemos cursos y programas de capacitaci√≥n personalizados en las √∫ltimas tecnolog√≠as para que tu talento se mantenga a la vanguardia.",
    icon: "üéì",
    link: "/servicios/capacitacion-it"
  }
];
---

<div class="services-container">
  <div class="section-header">
    <h2 class="section-title">Nuestros Servicios</h2>
    <p class="section-subtitle">Soluciones tecnol√≥gicas integrales para potenciar tu negocio</p>
  </div>
  
  <div class="services-grid">
    {services.map((service, index) => (
      <a href={service.link} class="service-card fade-in" style={`animation-delay: ${index * 0.1}s`}>
        <div class="service-icon">{service.icon}</div>
        <h3>{service.title}</h3>
        <p>{service.description}</p>
        <span class="service-link">Descubrir m√°s ‚Üí</span>
      </a>
    ))}
  </div>
</div>

<style>
  .services-container {
    /* max-width: 1200px; */
    margin: 0 auto;
    padding: 1rem 1rem;
      background: linear-gradient(
      135deg,
      rgba(240, 248, 255, 1) 0%,
      rgba(255, 255, 255, 0.628) 100%
    );

    background: #0f0c29;  /* fallback for old browsers */
background: -webkit-linear-gradient(to top, #24243e, #302b63, #0f0c29);  /* Chrome 10-25, Safari 5.1-6 */
background: linear-gradient(to top, #24243e, #302b63, #0f0c29); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

  }

  .section-header {
    text-align: center;
    margin-bottom: 4rem;
  }

  .section-title {
    font-size: 2.8rem;
    font-weight: 700;
    margin-bottom: 1rem;
    background: linear-gradient(135deg, #007aff 0%, #0056b3 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .section-subtitle {
    font-size: 1.2rem;
    color: #8e8e93;
    max-width: 600px;
    margin: 0 auto;
  }

  .services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .service-card {
    background: #ffffff;
    border-radius: 20px;
    padding: 2.5rem 2rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(0, 122, 255, 0.1);
    text-decoration: none;
    color: inherit;
  }

  .service-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(135deg, #007aff 0%, #0056b3 100%);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease;
  }

  .service-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.12);
  }

  .service-card:hover::before {
    transform: scaleX(1);
  }

  .service-icon {
    font-size: 3rem;
    margin-bottom: 1.5rem;
    display: inline-block;
    transition: all 0.3s ease;
  }

  .service-card:hover .service-icon {
    transform: scale(1.1);
  }

  .service-card h3 {
    font-size: 1.4rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: #1c1c1e;
  }

  .service-card p {
    color: #8e8e93;
    margin-bottom: 2rem;
    flex-grow: 1;
    line-height: 1.6;
  }

  .service-link {
    color: #007aff;
    font-weight: 500;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
  }

  .service-card:hover .service-link {
    color: #0056b3;
    transform: translateX(5px);
  }

  /* Animaciones */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-in {
    animation: fadeIn 0.6s ease forwards;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .services-grid {
      grid-template-columns: 1fr;
    }
    
    .section-title {
      font-size: 2.2rem;
    }
    
    .services-container {
      padding: 3rem 1rem;
    }
  }
</style> -->



---
// components/ServicesGrid.astro
import type { ReactNode } from 'react';
import { useState } from 'react';

interface Service {
  title: string;
  description: string;
  icon: ReactNode;
  link: string;
}

const services: Service[] = [
  {
    title: "Desarrollo Web a Medida",
    description: "Convertimos tus ideas en experiencias digitales. Creamos aplicaciones web modernas, r√°pidas y escalables, enfocadas en la usabilidad y la conexi√≥n con tus usuarios.",
    icon: "üíª",
    link: "/servicios/desarrollo-web"
  },
  {
    title: "Soporte y Gesti√≥n de Sistemas",
    description: "Garantizamos la continuidad de tu operaci√≥n. Nos anticipamos a los problemas y optimizamos tus sistemas con un mantenimiento proactivo y soporte experto para que siempre est√©n eficientes y seguros.",
    icon: "üîß",
    link: "/servicios/mantenimiento-sistemas"
  },
  {
    title: "Arquitectura de Infraestructura",
    description: "Dise√±amos la base tecnol√≥gica para tu crecimiento. Construimos y optimizamos infraestructuras eficientes y seguras que te preparan para escalar y competir en el futuro.",
    icon: "üèóÔ∏è",
    link: "/servicios/infraestructura-tecnologica"
  },
  {
    title: "Asesor√≠a en Transformaci√≥n Digital",
    description: "Te guiamos en la optimizaci√≥n de procesos y la adopci√≥n de tecnolog√≠as clave. Te ofrecemos una hoja de ruta clara para que tu negocio sea m√°s eficiente, innovador y competitivo.",
    icon: "üìä",
    link: "/servicios/consultoria-it"
  },
  {
    title: "Capacitaci√≥n y Cursos IT",
    description: "Invertimos en tu equipo para potenciar tu negocio. Ofrecemos cursos y programas de capacitaci√≥n personalizados en las √∫ltimas tecnolog√≠as para que tu talento se mantenga a la vanguardia.",
    icon: "üéì",
    link: "/servicios/capacitacion-it"
  }
];
---

<section id="services" class="services-section">
  <div class="waves-container">
    <div class="wave -one"></div>
    <div class="wave -two"></div>
    <div class="wave -three"></div>
  </div>

  <div class="container">
    <div class="section-header animate-fade-in">
      <h2 class="section-title">Nuestros Servicios</h2>
      <p class="section-subtitle">Soluciones tecnol√≥gicas integrales para potenciar tu negocio</p>
    </div>

    <div class="services-grid">
      {services.map((service, index) => (
        <a href={service.link} class="service-card animate-up" style={`animation-delay: ${index * 0.1}s`}>
          <div class="service-icon">{service.icon}</div>
          <h3>{service.title}</h3>
          <p>{service.description}</p>
          <span class="service-link">Descubrir m√°s ‚Üí</span>
        </a>
      ))}
    </div>
  </div>
</section>

<style>
  .services-section {
    padding: 2rem 2rem;
    background: #0f0c29;  /* fallback for old browsers */
background: -webkit-linear-gradient(to left, #24243e, #302b63, #0f0c29);  /* Chrome 10-25, Safari 5.1-6 */
background: linear-gradient(to left, #24243e, #302b63, #0f0c29); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

    position: relative;
    overflow: hidden;
    border-radius: 2%;
    box-shadow: 5px 15px 16px rgba(0, 0, 0, 0.1);
    padding-bottom: 1%;
    margin-bottom: 1%;
  }

  .container {
    position: relative;
    z-index: 2;
  }

  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: #ffffff;
  }

  .section-subtitle {
    font-size: 1.1rem;
    color: #c6c6c6;
  }

  .services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .service-card {
    background: #ffffff;
    border-radius: 20px;
    padding: 2.5rem 2rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(0, 122, 255, 0.1);
    text-decoration: none;
    color: inherit;
  }

  .service-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(135deg, #007aff 0%, #0056b3 100%);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease;
  }

  .service-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.12);
  }

  .service-card:hover::before {
    transform: scaleX(1);
  }

  .service-icon {
    font-size: 3rem;
    margin-bottom: 1.5rem;
    display: inline-block;
    transition: all 0.3s ease;
  }

  .service-card:hover .service-icon {
    transform: scale(1.1);
  }

  .service-card h3 {
    font-size: 1.4rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: #1c1c1e;
  }

  .service-card p {
    color: #8e8e93;
    margin-bottom: 2rem;
    flex-grow: 1;
    line-height: 1.6;
  }

  .service-link {
    color: #007aff;
    font-weight: 500;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
  }

  .service-card:hover .service-link {
    color: #0056b3;
    transform: translateX(5px);
  }

  /* --- Estilos de las ondas (Animaci√≥n) --- */
  .waves-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 1;
    pointer-events: none;
  }

  .wave {
    position: absolute;
    top: 0;
    left: 0;
    width: 200%;
    height: 200%;
    background-color: rgba(255, 255, 255, 0.5);
    opacity: 0.1;
    border-radius: 40%;
    transform-origin: 50% 50%;
    animation: sway 30s infinite ease-in-out;
  }

  .wave.-two {
    animation: sway 35s infinite ease-in-out;
    opacity: 0.08;
    background-color: rgba(179, 217, 255, 0.5);
    transform: rotate(20deg);
  }

  .wave.-three {
    animation: sway 40s infinite ease-in-out;
    opacity: 0.05;
    background-color: rgba(135, 206, 250, 0.5);
    transform: rotate(40deg);
  }

  @keyframes sway {
    0% {
      transform: rotate(0deg) scale(1);
    }
    50% {
      transform: rotate(5deg) scale(1.01);
    }
    100% {
      transform: rotate(0deg) scale(1);
    }
  }

  /* --- Animaciones para la carga de los elementos --- */
  .animate-up, .animate-fade-in {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  }

  .animate-up.visible, .animate-fade-in.visible {
    opacity: 1;
    transform: translateY(0);
  }
  
  @media (max-width: 768px) {
    .services-section {
      padding: 3rem 0;
    }
    
    .services-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const observerOptions = {
      root: null,
      rootMargin: "0px",
      threshold: 0.2
    };

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add("visible");
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);

    const animatedElements = document.querySelectorAll(".animate-up, .animate-fade-in");
    animatedElements.forEach(el => observer.observe(el));
  });
</script>